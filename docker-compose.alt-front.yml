# Dev env for alternative frontend development
version: "3.8"
services:
  mysql:
    image: 'mysql/mysql-server:8.0'
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_HOST: '%'
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    volumes:
      - 'db:/var/lib/mysql'
    ports:
      - '3306:3306'
    tmpfs:
      - /var/lib/mysql
    healthcheck:
      test: mysqladmin ping -p${DB_USERNAME}
      retries: 3
      timeout: 5s
    networks:
      - alt-front

  backend:
    build:
      args:
        PHP_UID: 1000
        PHP_GID: 1000
      dockerfile: test.Dockerfile
    container_name: backend
    command: php artisan serve --host=0.0.0.0 --port=9000
    environment:
      - ROLE=backend
    working_dir: /var/www/
    volumes:
      - ./:/var/www
    ports:
      - '9000:9000'
    healthcheck:
      test: curl -f http://0.0.0.0:9000 || exit 1
      interval: 10s
      retries: 20
      start_period: 15s
      timeout: 10s
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - alt-front

  frontend-alternative:
    container_name: frontend-alternative
    command: npm run serve
    build:
      context: ./frontend_alternative
      dockerfile: Dockerfile
    environment:
      - VUE_APP_AXIOS_URL=http://127.0.0.1:9000
      - VUE_APP_API_VERSION=${API_VERSION}
    volumes:
      - ./frontend_alternative:/app
      - /app/node_modules
    ports:
      - '8080:8080'
    logging:
      options:
        max-size: 100m
    depends_on:
      - backend
    networks:
      - alt-front

networks:
  alt-front:
volumes:
  db:
  vue_dist:
